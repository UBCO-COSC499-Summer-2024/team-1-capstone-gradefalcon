version: "3.8"

services:
  backend:
    build:
      args:
        - NODE_ENV=development
      context: backend
      target: development
    command: npm run start-watch
    environment:
      - DATABASE_DB=root
      - DATABASE_USER=root
      - DATABASE_PASSWORD=secret
      - DATABASE_HOST=db
      - NODE_ENV=development
      - JWT_SECRET=secret
      - DATABASE_PORT=5432
    ports:
      - 80:80
      - 9229:9229
      - 9230:9230
    volumes:
      - ./backend/src:/code/src:ro
      - ./backend/package.json:/code/package.json
      - ./backend/package-lock.json:/code/package-lock.json
      - back-notused:/opt/app/node_modules
      - omr-volume:/code
    networks:
      - public
      - private
    depends_on:
      - db
      - rabbitmq

  db:
    container_name: db-postgres
    ports:
      - 5433:5432
    hostname: db
    environment:
      - POSTGRES_DB=root
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
    image: postgres:latest
    volumes:
      - ./db/sql:/docker-entrypoint-initdb.d
    networks:
      - public
      - private

  frontend:
    build:
      context: frontend
      target: development
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
      - omr-volume:/app/omr
    networks:
      - public
    depends_on:
      - backend

  omr:
    build:
      context: ./omr # Specifies the directory where your Dockerfile is located
    environment:
      - OMR_CHECKER_CONTAINER=True
    volumes:
      - ./omr/inputs:/app/inputs # Maps the local ./omr/inputs directory to /app/inputs in the container
      - ./omr/outputs:/app/outputs # Maps the local ./omr/outputs directory to /app/outputs in the container
      - omr-volume:/app
    networks:
      - public
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - public

  worker:
    build:
      context: worker
    networks:
      - public
    depends_on:
      - rabbitmq

networks:
  public:
  private:

volumes:
  back-notused:
  db-data:
  omr-volume:
